// <auto-generated />
using System;
using BeTheChangeFinal.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BeTheChangeFinal.Migrations
{
    [DbContext(typeof(BeTheChangeContext))]
    [Migration("20200119060940_Username")]
    partial class Username
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BeTheChangeFinal.Models.Charity", b =>
                {
                    b.Property<int>("CharityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("charity_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CharityDetails")
                        .IsRequired()
                        .HasColumnName("charity_details")
                        .HasColumnType("varchar(2000)")
                        .HasMaxLength(2000)
                        .IsUnicode(false);

                    b.Property<string>("CharityLink")
                        .HasColumnName("charity_link")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("CharityLocation")
                        .HasColumnName("charity_location")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("CharityName")
                        .IsRequired()
                        .HasColumnName("charity_name")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("CharityOrganization")
                        .HasColumnName("charity_organization")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("CtypeName")
                        .IsRequired()
                        .HasColumnName("ctype_name")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("CharityId");

                    b.HasIndex("CtypeName");

                    b.ToTable("Charity");
                });

            modelBuilder.Entity("BeTheChangeFinal.Models.CharityType", b =>
                {
                    b.Property<string>("CtypeName")
                        .HasColumnName("ctype_name")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("CtypeName")
                        .HasName("PK__Charity___AEFECC1A1C13ADD2");

                    b.ToTable("Charity_Type");
                });

            modelBuilder.Entity("BeTheChangeFinal.Models.CustomCauses", b =>
                {
                    b.Property<int>("CustomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("custom_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CauseType")
                        .HasColumnName("cause_type")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CustomDetails")
                        .IsRequired()
                        .HasColumnName("custom_details")
                        .HasColumnType("varchar(2000)")
                        .HasMaxLength(2000)
                        .IsUnicode(false);

                    b.Property<string>("CustomLocation")
                        .HasColumnName("custom_location")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("CustomName")
                        .IsRequired()
                        .HasColumnName("custom_name")
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<string>("DonateLink")
                        .HasColumnName("donate_link")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomId")
                        .HasName("PK__Custom_C__8664B23A2218D9AE");

                    b.ToTable("Custom_Causes");
                });

            modelBuilder.Entity("BeTheChangeFinal.Models.Disaster", b =>
                {
                    b.Property<int>("DisasterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("disaster_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DisasterDetails")
                        .IsRequired()
                        .HasColumnName("disaster_details")
                        .HasColumnType("varchar(2000)")
                        .HasMaxLength(2000)
                        .IsUnicode(false);

                    b.Property<string>("DisasterLink")
                        .HasColumnName("disaster_link")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("DisasterLocation")
                        .IsRequired()
                        .HasColumnName("disaster_location")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("DisasterName")
                        .IsRequired()
                        .HasColumnName("disaster_name")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("DtypeName")
                        .IsRequired()
                        .HasColumnName("dtype_name")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Urgency")
                        .IsRequired()
                        .HasColumnName("urgency")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.HasKey("DisasterId");

                    b.HasIndex("DtypeName");

                    b.ToTable("Disaster");
                });

            modelBuilder.Entity("BeTheChangeFinal.Models.DisasterType", b =>
                {
                    b.Property<string>("DtypeName")
                        .HasColumnName("dtype_name")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("DtypeName")
                        .HasName("PK__Disaster__56E16900129580B2");

                    b.ToTable("Disaster_type");
                });

            modelBuilder.Entity("BeTheChangeFinal.Models.Posts", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("post_id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("PostDate")
                        .HasColumnName("post_date")
                        .HasColumnType("date");

                    b.Property<string>("PostDetails")
                        .IsRequired()
                        .HasColumnName("post_details")
                        .HasColumnType("varchar(2000)")
                        .HasMaxLength(2000)
                        .IsUnicode(false);

                    b.Property<string>("PostTitle")
                        .IsRequired()
                        .HasColumnName("post_title")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnName("user_email")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("PostId")
                        .HasName("PK__Posts__3ED7876680D93C76");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("BeTheChangeFinal.Models.Charity", b =>
                {
                    b.HasOne("BeTheChangeFinal.Models.CharityType", "CtypeNameNavigation")
                        .WithMany("Charity")
                        .HasForeignKey("CtypeName")
                        .HasConstraintName("FK__Charity__ctype_n__2C3393D0")
                        .IsRequired();
                });

            modelBuilder.Entity("BeTheChangeFinal.Models.Disaster", b =>
                {
                    b.HasOne("BeTheChangeFinal.Models.DisasterType", "DtypeNameNavigation")
                        .WithMany("Disaster")
                        .HasForeignKey("DtypeName")
                        .HasConstraintName("FK__Disaster__dtype___2F10007B")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
